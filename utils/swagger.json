{
  "openapi": "3.0.3",
  "info": {
    "title": "Budget Traveler Web App",
    "description": "API documentation for Budget Traveler Web App",
    "version": "1.0.0",
    "contact": {
      "name": "admin",
      "email": "admin@metropolia.fi"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local environment"
    }
  ],
  "tags": [
    {
      "name": "Post endpoints"
    },
    {
      "name": "User endpoints"
    },
    {
      "name": "Comment endpoints"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "testResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Pong"
          }
        }
      }
    }
  },
  "paths": {
    "/post": {
      "get": {
        "tags": ["Post endpoints"],
        "description": "Get all posts",
        "responses": {
          "200": {
            "description": "Server response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "post_id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "title": {
                        "type": "string",
                        "example": "Campsite in Nuuksio"
                      },
                      "address": {
                        "type": "string",
                        "example": "Karaportti 2"
                      },
                      "coords": {
                        "type": "string",
                        "example": "Karaportti 2"
                      },
                      "content": {
                        "type": "string",
                        "example": "A nice place for a getaway weekend"
                      },
                      "regionId": {
                        "type": "string",
                        "enum": [
                          "Finland",
                          "Ahvenanmaa",
                          "Etelä-Karjala",
                          "Etelä-Pohjanmaa",
                          "Etelä-Savo",
                          "Kainuu",
                          "Kanta-Häme",
                          "Keski-Pohjanmaa",
                          "Keski-Suomi",
                          "Kymenlaakso",
                          "Lappi",
                          "Pirkanmaa",
                          "Pohjanmaa",
                          "Pohjois-Karjala",
                          "Pohjois-Pohjanmaa",
                          "Pohjois-Savo",
                          "Päijät-Häme",
                          "Satakunta",
                          "Uusimaa",
                          "Varsinais-Suomi"
                        ]
                      },
                      "created_date": {
                        "type": "string",
                        "pattern": "d{4}-d{1,2}-d{1,2} d{1,2}:d{1,2}:d{1,2}",
                        "example": "2021-12-04 20:49:26"
                      },
                      "edited_date": {
                        "type": "string",
                        "pattern": "d{4}-d{1,2}-d{1,2} d{1,2}:d{1,2}:d{1,2}",
                        "example": "2021-12-04 20:49:26"
                      },
                      "free_or_not": {
                        "type": "string",
                        "enum": ["free", "paid"]
                      },
                      "price": {
                        "type": "integer",
                        "format": "float",
                        "example": "25.00"
                      },
                      "filename": {
                        "type": "string",
                        "example": "97b439006ad80c172419ce51354b06b1"
                      },
                      "user_id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "username": {
                        "type": "string",
                        "example": "camper1"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Post endpoints"],
        "description": "Insert a post",
        "requestBody": {
          "required": "true",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "regionId": {
                    "type": "string",
                    "enum": [
                      "Finland",
                      "Ahvenanmaa",
                      "Etelä-Karjala",
                      "Etelä-Pohjanmaa",
                      "Etelä-Savo",
                      "Kainuu",
                      "Kanta-Häme",
                      "Keski-Pohjanmaa",
                      "Keski-Suomi",
                      "Kymenlaakso",
                      "Lappi",
                      "Pirkanmaa",
                      "Pohjanmaa",
                      "Pohjois-Karjala",
                      "Pohjois-Pohjanmaa",
                      "Pohjois-Savo",
                      "Päijät-Häme",
                      "Satakunta",
                      "Uusimaa",
                      "Varsinais-Suomi"
                    ]
                  },
                  "freeOrNot": {
                    "type": "string",
                    "enum": ["free", "paid"]
                  },
                  "price": {
                    "type": "integer",
                    "format": "float"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "photo": {
                  "contentType": "image/jpeg"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Server responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "A post created with id 24"
                    },
                    "post_id": {
                      "type": "integer",
                      "example": "24"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/post/{postId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the post to get"
          }
        ],
        "tags": ["Post endpoints"],
        "description": "API endpoint for getting a specific post",
        "responses": {
          "200": {
            "description": "Server response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "post_id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "title": {
                        "type": "string",
                        "example": "Campsite in Nuuksio"
                      },
                      "address": {
                        "type": "string",
                        "example": "Karaportti 2"
                      },
                      "coords": {
                        "type": "string",
                        "example": "Karaportti 2"
                      },
                      "content": {
                        "type": "string",
                        "example": "A nice place for a getaway weekend"
                      },
                      "regionId": {
                        "type": "string",
                        "enum": [
                          "Finland",
                          "Ahvenanmaa",
                          "Etelä-Karjala",
                          "Etelä-Pohjanmaa",
                          "Etelä-Savo",
                          "Kainuu",
                          "Kanta-Häme",
                          "Keski-Pohjanmaa",
                          "Keski-Suomi",
                          "Kymenlaakso",
                          "Lappi",
                          "Pirkanmaa",
                          "Pohjanmaa",
                          "Pohjois-Karjala",
                          "Pohjois-Pohjanmaa",
                          "Pohjois-Savo",
                          "Päijät-Häme",
                          "Satakunta",
                          "Uusimaa",
                          "Varsinais-Suomi"
                        ]
                      },
                      "created_date": {
                        "type": "string",
                        "pattern": "d{4}-d{1,2}-d{1,2} d{1,2}:d{1,2}:d{1,2}",
                        "example": "2021-12-04 20:49:26"
                      },
                      "edited_date": {
                        "type": "string",
                        "pattern": "d{4}-d{1,2}-d{1,2} d{1,2}:d{1,2}:d{1,2}",
                        "example": "2021-12-04 20:49:26"
                      },
                      "free_or_not": {
                        "type": "string",
                        "enum": ["free", "paid"]
                      },
                      "price": {
                        "type": "integer",
                        "format": "float",
                        "example": "25.00"
                      },
                      "filename": {
                        "type": "string",
                        "example": "97b439006ad80c172419ce51354b06b1"
                      },
                      "user_id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "username": {
                        "type": "string",
                        "example": "camper1"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the post to delete"
          }
        ],
        "tags": ["Post endpoints"],
        "description": "API endpoint for deleting a specific post",
        "responses": {
          "200": {
            "description": "Server responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post deleted: true"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the post to update"
          }
        ],
        "tags": ["Post endpoints"],
        "description": "Update a post",
        "requestBody": {
          "required": "true",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "regionId": {
                    "type": "string",
                    "enum": [
                      "Finland",
                      "Ahvenanmaa",
                      "Etelä-Karjala",
                      "Etelä-Pohjanmaa",
                      "Etelä-Savo",
                      "Kainuu",
                      "Kanta-Häme",
                      "Keski-Pohjanmaa",
                      "Keski-Suomi",
                      "Kymenlaakso",
                      "Lappi",
                      "Pirkanmaa",
                      "Pohjanmaa",
                      "Pohjois-Karjala",
                      "Pohjois-Pohjanmaa",
                      "Pohjois-Savo",
                      "Päijät-Häme",
                      "Satakunta",
                      "Uusimaa",
                      "Varsinais-Suomi"
                    ]
                  },
                  "freeOrNot": {
                    "type": "string",
                    "enum": ["free", "paid"]
                  },
                  "price": {
                    "type": "integer",
                    "format": "float"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "photo": {
                  "contentType": "image/jpeg"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Server responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post updated: true"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User endpoints"],
        "description": "Get all users",
        "responses": {
          "200": {
            "description": "Server response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "username": {
                        "type": "string",
                        "example": "camper1"
                      },
                      "email": {
                        "type": "string",
                        "example": "camper1@metropilia.fi"
                      },
                      "role": {
                        "type": "integer",
                        "example": "1"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User endpoints"],
        "description": "Insert a user",
        "requestBody": {
          "required": "true",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Server responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "A user created with id 5"
                    },
                    "user_id": {
                      "type": "integer",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the user to get"
          }
        ],
        "tags": ["User endpoints"],
        "description": "API endpoint for getting a specific user",
        "responses": {
          "200": {
            "description": "Server response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "username": {
                        "type": "string",
                        "example": "camper1"
                      },
                      "email": {
                        "type": "string",
                        "example": "camper1@metropolia.fi"
                      },
                      "role": {
                        "type": "integer",
                        "example": "1"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the user to delete"
          }
        ],
        "tags": ["User endpoints"],
        "description": "API endpoint for deleting a specific user",
        "responses": {
          "200": {
            "description": "Server responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User deleted: true"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the user to update"
          }
        ],
        "tags": ["User endpoints"],
        "description": "Update a user",
        "requestBody": {
          "required": "true",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Server responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User updated: true"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/post/{postId}/comment": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the post to view comment"
          }
        ],
        "tags": ["Comment endpoints"],
        "description": "Get all comments of a specific post",
        "responses": {
          "200": {
            "description": "Server response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment_id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "content": {
                        "type": "string",
                        "example": "Such a beautiful campsite"
                      },
                      "created_date": {
                        "type": "string",
                        "pattern": "d{4}-d{1,2}-d{1,2} d{1,2}:d{1,2}:d{1,2}",
                        "example": "2021-12-04 20:49:26"
                      },
                      "edited_date": {
                        "type": "string",
                        "pattern": "d{4}-d{1,2}-d{1,2} d{1,2}:d{1,2}:d{1,2}",
                        "example": "2021-12-04 20:49:26"
                      },
                      "post_id": {
                        "type": "integer",
                        "example": "4"
                      },
                      "user_id": {
                        "type": "integer",
                        "example": "2"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the post to view comment"
          }
        ],
        "tags": ["Comment endpoints"],
        "description": "Insert a comment",
        "requestBody": {
          "required": "true",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Server responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "A comment created with id 5"
                    },
                    "user_id": {
                      "type": "integer",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/post/{postId}/comment/{commentId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the post to get"
          },
          {
            "in": "path",
            "name": "commentId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the comment to get"
          }
        ],
        "tags": ["Comment endpoints"],
        "description": "API endpoint for getting a specific comment of a specific post",
        "responses": {
          "200": {
            "description": "Server response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment_id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "content": {
                        "type": "string",
                        "example": "Such a beautiful campsite"
                      },
                      "created_date": {
                        "type": "string",
                        "pattern": "d{4}-d{1,2}-d{1,2} d{1,2}:d{1,2}:d{1,2}",
                        "example": "2021-12-04 20:49:26"
                      },
                      "edited_date": {
                        "type": "string",
                        "pattern": "d{4}-d{1,2}-d{1,2} d{1,2}:d{1,2}:d{1,2}",
                        "example": "2021-12-04 20:49:26"
                      },
                      "post_id": {
                        "type": "integer",
                        "example": "4"
                      },
                      "user_id": {
                        "type": "integer",
                        "example": "2"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the post to get"
          },
          {
            "in": "path",
            "name": "commentId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the user to delete"
          }
        ],
        "tags": ["Comment endpoints"],
        "description": "API endpoint for deleting a specific comment of a specific post",
        "responses": {
          "200": {
            "description": "Server responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Comment deleted: true"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the post to get"
          },
          {
            "in": "path",
            "name": "commentId",
            "schema": {
              "type": "integer"
            },
            "required": "true",
            "description": "Numeric ID of the comment to update"
          }
        ],
        "tags": ["Comment endpoints"],
        "description": "Update a comment",
        "requestBody": {
          "required": "true",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Server responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Comment updated: true"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
